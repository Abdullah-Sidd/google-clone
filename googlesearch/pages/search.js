import React, {  useRef } from 'react'
import { MicrophoneIcon } from '@heroicons/react/24/solid'
import { useRouter } from 'next/router'
import Head from 'next/head'
import SearchResults from './SearchResults'

const Search = ({results}) => {
    // console.log(results)
    const router = useRouter()
    const search = e => {
      e.preventDefault();
      const result = SearchInput.current.value;
      if (!result)return;
      router.push(`/search?result=${result}`)
    }
    const SearchInput = useRef(null)
  return (
    
    <div>
        <Head>
        <title>{router.query.result}-GoogleSearch</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
    <div className="flex mx-auto w-full mt-5 hover:shadow-lg focus-within:shadow-Ig
max-w-md rounded-full border border-gray-200 px-5 ру-3 items-center
sm:max-w-xl lg:max-w-2x1">
{/* <SearchIcon className="h-5 mr-3 text-gray-500"/> */}
<svg onClick={search} className="h-5 mr-3 text-gray-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
  <path stroke-linecap="round" stroke-linejoin="round" d="M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z" />
</svg>

<input  ref={SearchInput}  type="search" class="form-control relative flex-auto min-w-0 block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding   rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white  focus:outline-none" placeholder="Search" aria-label="Search" aria-describedby="button-addon2"/>
<MicrophoneIcon className="h-5" />
</div>

<SearchResults results={results}/>

    </div>
  )
}


export async function getServerSideProps(context) {
    const API_KEY = process.env.API_KEY
    const CNT_KEY = process.env.CNT_KEY
    const request = await fetch(`https://www.googleapis.com/customsearch/v1?key=${API_KEY}&cx=${CNT_KEY}&q=${context.query.result}`);
    const results = await request.json();
    return {
      props: {results}, // will be passed to the page component as props
    }
  }
export default Search
